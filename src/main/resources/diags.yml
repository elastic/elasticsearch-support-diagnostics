# REST timeout settings - note:values are in second

github-settings:
  diagReleaseHost: "api.github.com"
  diagReleaseDest: "/repos/elastic/support-diagnostics/releases/latest"
  diagReleaseScheme: "https"
  diagLatestRelease: "https://api.github.com/repos/elastic/support-diagnostics/releases/latest"

log-settings:
  maxLogs: 2
  maxGcLogs: 3

text-file-extensions:
  - allocation
  - cat_allocation
  - cat_aliases
  - cat_count
  - cat_fielddata
  - cat_health
  - cat_indices
  - cat_master
  - cat_nodeattrs
  - cat_nodes
  - cat_pending_tasks
  - cat_recovery
  - cat_repositories
  - cat_segments
  - cat_shards
  - cat_thread_pool
  - logstash_nodes_hot_threads
  - nodes_hot_threads

# Uncomment only if modifying defaults
rest-config:
   # timeouts in seconds
   requestTimeout: 60
   connectTimeout: 60
   socketTimeout:  120
   maxTotalConn: 100
   maxConnPerRoute: 10

# Number of tiems to re-attempt a rest call
call-retries: 3

# Time before re-attempts in milliseconnds
pause-retries: 5000

# Which calls to re-attempt
require-retry:
  - nodes
  - nodes-stats
  - shards
  - cluster_state

rest-calls:
  common:
    alias: "/_alias?pretty&human"
    cat_aliases: "/_cat/aliases?v"
    cat_allocation: "/_cat/allocation?v"
    cat_count: "/_cat/count"
    cat_fielddata: "/_cat/fielddata?v"
    cat_health: "/_cat/health?v"
    cat_indices: "/_cat/indices?v"
    cat_master: "/_cat/master?format=json"
    cat_nodes: "/_cat/nodes?v&h=n,m,i,r,d,hp,rp,cpu,load_1m,load_5m,load_15m,nodeId"
    cat_pending_tasks: "/_cat/pending_tasks?v"
    cat_segments: "/_cat/segments?v"
    cat_recovery: "/_cat/recovery?v"
    cat_shards: "/_cat/shards?v"
    cat_thread_pool: "/_cat/thread_pool?v"
    cluster_health: "/_cluster/health?pretty"
    cluster_pending_tasks: "/_cluster/pending_tasks?pretty&human"
    cluster_settings: "/_cluster/settings?pretty&flat_settings"
    cluster_state: "/_cluster/state?pretty&human"
    cluster_stats: "/_cluster/stats?pretty&human"
    fielddata: "/_cat/fielddata?format=json&bytes&pretty"
    fielddata_stats: "/_nodes/stats/indices/fielddata?pretty=true&fields=*"
    indices_stats: "/_stats?level=shards&pretty&human"
    mapping: "/_mapping?pretty"
    master: "/_cat/master?format=json"
    nodes_hot_threads: "/_nodes/hot_threads?threads=10000"
    nodes_stats: "/_nodes/stats?pretty&human"
    nodes: "/_nodes?pretty&human"
    plugins: "/_cat/plugins?format=json"
    recovery: "/_recovery?pretty&human&detailed=true"
    segments: "/_segments?pretty&human"
    settings: "/_settings?pretty&human"
    shards: "/_cat/shards?format=json&bytes=b&pretty"
    templates: "/_template?pretty"
    version: "/"
    watcher_stats: "/_watcher/stats/_all"
    watcher_stack: "/_watcher/stats?emit_stacktraces=true"

  versions:

    major-1:
      minor-0:
        licenses: "/_licenses"

    major-2:
      minor-0:
        cat_nodeattrs: "/_cat/nodeattrs?v&h=node,id,pid,host,ip,port,attr,value"
        cat_repositories: "/_cat/repositories?v"
        count: "/_count"
        licenses: "/_license?pretty"  #override
        security_users: "/_shield/user?pretty"
        security_roles: "/_shield/role?pretty"
        shard_stores: "/_shard_stores?pretty"
        tasks: "/_tasks?pretty&human&detailed=true"

    major-5:
      minor-0:
        allocation_explain: "/_cluster/allocation/explain?pretty"
        allocation_explain_disk: "/_cluster/allocation/explain?include_disk_info=true&pretty"
        fielddata_stats: "/_nodes/stats/indices/fielddata?level=shards&pretty=true&fields=*"
        ml_anomaly_detectors: "/_xpack/ml/anomaly_detectors?pretty"
        ml_datafeeds: "/_xpack/ml/datafeeds?pretty"
        ml_stats: "/_xpack/ml/anomaly_detectors/_stats?pretty"
        pipelines: "/_ingest/pipeline/*?pretty&human"
        security_users: "/_xpack/security/user?pretty"
        security_roles: "/_xpack/security/role?pretty"
        security_role_mappings: "/_xpack/security/role_mapping?pretty"
        xpack: "/_xpack/usage?pretty&human"
      minor-2:
        # sorting appeared in the REST API spec for these in 5.2, but the feature appeared in 5.1.1
        # see elastic/elasticsearch/pull/20658
        cat_indices: "/_cat/indices?v&s=index"
        cat_segments: "/_cat/segments?v&s=index"
        cat_shards: "/_cat/shards?v&s=index"

    major-6:
      minor-0:
        nodes_usage: "/_nodes/usage?pretty"
        remote_cluster_info: "/_remote/info"
      minor-3:
        rollup_jobs: "/_xpack/rollup/job/_all"
        rollup_caps: "/_xpack/rollup/data/_all"
      minor-4:
        cluster_settings_defaults: "/_cluster/settings?include_defaults&pretty&flat_settings"
      minor-5:
        rollup_index_caps: "/*/_xpack/rollup/data"
        security_priv: "/_xpack/security/privilege?pretty"
        ccr_stats: "/_ccr/stats?pretty"
        ccr_autofollow_patterns: "/_ccr/auto_follow?pretty"
      minor-6:
        ilm_explain: "/*/_ilm/explain?human&pretty"
        ilm_policies: "/_ilm/policy?human&pretty"
        ilm_status: "/_ilm/status?pretty"
      minor-7:
        ccr_follower_info: "/_all/_ccr/info?pretty"

thread-dump:
  jstack: "jstack PID"

logstash:
  logstash_version: "/?pretty"
  logstash_node: "/_node?pretty"
  logstash_node_stats: "/_node/stats?pretty"
  logstash_nodes_hot_threads: "/_node/hot_threads?human=true&threads=10000"
  logstash_plugins: "/_node/plugins?pretty"

linuxOS:
  sys:
    top: "top -b -n1"
    netstat: "netstat -an"
    ss: "ss -an"
    process-list: "ps -ef"
    top_threads: "top -b -n1 -H"
    uname: "uname -a -r"
    cpu: "cat /proc/cpuinfo"
    iostat: "iostat -c -d -x -t -m 1 5"
    sar: "sar -A"
    sysctl: "sysctl -a"
    dmesg: "dmesg"
    huge_pages: "cat /sys/kernel/mm/transparent_hugepage/enabled"
    cpu_governor: "cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor"
    limits: "cat /etc/security/limits.conf"
    proc-limit: "cat /proc/PID/limits"
  es:
    elastic-process: "ps ax"
  java:
    jps: "JAVA_HOME/bin/jps -l -m -v"
    jstack: "JAVA_HOME/bin/jstack PID"

macOS:
  sys:
    top: "top -l 1"
    netstat: "netstat -an"
    process-list: "ps ax"
    ulimit: "ulimit -a"
  es:
    elastic-process: "ps ax"
  java:
    jps: "JAVA_HOME/bin/jps -l -m -v"
    jstack: "JAVA_HOME/bin/jstack PID"

winOS:
  sys:
    process-list: "tasklist /v"
    netstat: "netstat -ano"
    cpu: "wmic CPU"
  es:
    process: "wmic process where name='java.exe'"
  java:
    jps: "JAVA_HOME\\bin\\jps -l -m -v"
    jstack: "JAVA_HOME\\bin\\jstack PID"

docker-global:
  docker-info: "docker info"
  docker-ps-all: "docker ps -a --no-trunc"

# This looks a little weird, but we have to tokenize 2x, once for the
# part that would normally be in single quotes and contains spaces and
# once for the space separate first section. Due to quirks in how the
# Java Processbuilder works.
docker-containers:
  docker-ulimit: "docker exec -i CONTAINER_ID bash -c ;; ulimit -a"
  docker-internal-top: "docker exec -i CONTAINER_ID bash -c ;; top -b -n1"
  docker-uname: "docker exec -i CONTAINER_ID bash -c ;; uname -a -r"
  docker-top-threads: "docker exec -i CONTAINER_ID bash -c ;; top -b -n1 -H"
  docker-process-list: "docker exec -i CONTAINER_ID bash -c ;; ps -ef"
  docker-cpu-info: "docker exec -i CONTAINER_ID bash -c ;; cat /proc/cpuinfo"
  docker-sysctl: "docker exec -i CONTAINER_ID bash -c ;; sysctl -a"
  docker-logs: "docker logs CONTAINER_ID"
  docker-top: "docker top CONTAINER_ID"

monitoring-stats:
  - cluster_stats
  - node_stats
  - indices_stats
  - index_stats
  - shards
  - job_stats
  - ccr_stats
  - ccr_auto_follow_stats

monitoring-queryfiles:
  general: "general.json"
  index_stats: "index_stats.json"
  index_all: "index_all.json"
  cluster_id_check: "cluster_id_check.json"
  cluster_ids: "cluster_ids.json"

monitoring-uri: "/.monitoring-es*/_search"
monitoring-scroll-ttl: "?scroll=2m"
monitoring-scroll-size: 500
monitoring-scroll-uri: "/_search/scroll"

default-monitoring-index: ".monitoring-es-7"

bulk-import-size: 250
